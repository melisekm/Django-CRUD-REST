# Generated by Django 3.1.6 on 2021-03-18 20:31
from django.db import connection
from django.db import migrations


def insert_from_or_podanie_issues(apps, schema_editor):
    insert_query = """
    INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)

    SELECT cin, corporate_body_name as name,br_section, address_line, 
     updated_at as last_update, now()::timestamp as created_at, now()::timestamp as updated_at
        FROM (
            SELECT cin, br_section, address_line, corporate_body_name, updated_at,
                        row_number() OVER (
                        PARTITION BY cin
                        ORDER BY updated_at DESC) AS rn
                    FROM (
                        SELECT cin, br_section, address_line, corporate_body_name, updated_at
                        FROM ov.or_podanie_issues
                    ) tmp1
            ) tmp2
    WHERE cin IS NOT null AND rn=1
    ON CONFLICT (cin) DO NOTHING;
    """

    with connection.cursor() as cursor:
        cursor.execute(insert_query)


def insert_from_likvidator_issues(apps, schema_editor):
    insert_query = """
    INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)

    SELECT cin, corporate_body_name as name, br_section, address_line, 
    updated_at as last_update, now()::timestamp as created_at, now()::timestamp as updated_at
    FROM (
        SELECT cin, br_section, address_line, corporate_body_name, updated_at,
                    row_number() OVER (
                    PARTITION BY cin
                    ORDER BY updated_at DESC) AS rn
                FROM (
                    SELECT cin, br_section, CONCAT(street, ', ', postal_code, ' ', city) as address_line, corporate_body_name, updated_at
                    FROM ov.likvidator_issues
                ) tmp1
        ) tmp2
    WHERE cin IS NOT null AND rn=1
    ON CONFLICT (cin) DO NOTHING;
    """

    with connection.cursor() as cursor:
        cursor.execute(insert_query)


def insert_from_konkurz_vyrovnanie_issues(apps, schema_editor):
    insert_query = """
    INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)

    SELECT cin, corporate_body_name as name,br_section, address_line, 
    updated_at as last_update, now()::timestamp as created_at, now()::timestamp as updated_at
    FROM (
        SELECT cin, br_section, address_line, corporate_body_name, updated_at,
                    row_number() OVER (
                    PARTITION BY cin
                    ORDER BY updated_at DESC) AS rn
                FROM (
                    SELECT cin, '' as br_section, CONCAT(street, ', ', postal_code, ' ', city) as address_line, corporate_body_name, updated_at
                    FROM ov.konkurz_vyrovnanie_issues
                ) tmp1
        ) tmp2
    WHERE cin IS NOT null AND rn=1
    ON CONFLICT (cin) DO NOTHING;
    """

    with connection.cursor() as cursor:
        cursor.execute(insert_query)


def insert_from_znizenie_imania_issues(apps, schema_editor):
    insert_query = """
    INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)

    SELECT cin, corporate_body_name as name,br_section, address_line, 
    updated_at as last_update, now()::timestamp as created_at, now()::timestamp as updated_at
    FROM (
        SELECT cin, br_section, address_line, corporate_body_name, updated_at,
                    row_number() OVER (
                    PARTITION BY cin
                    ORDER BY updated_at DESC) AS rn
            FROM (
                    SELECT cin, br_section, CONCAT(street, ', ', postal_code, ' ', city) as address_line, corporate_body_name, updated_at
                    FROM ov.znizenie_imania_issues
                ) tmp1
        ) tmp2
    WHERE cin IS NOT null AND rn=1
    ON CONFLICT (cin) DO NOTHING;
    """

    with connection.cursor() as cursor:
        cursor.execute(insert_query)


def insert_from_konkurz_restrukturalizacia_actors(apps, schema_editor):
    insert_query = """
    INSERT INTO ov.companies (cin, name, br_section, address_line, last_update, created_at, updated_at)

    SELECT cin, corporate_body_name as name,br_section, address_line, 
    updated_at as last_update, now()::timestamp as created_at, now()::timestamp as updated_at
    FROM (
        SELECT cin, br_section, address_line, corporate_body_name, updated_at,
                    row_number() OVER (
                    PARTITION BY cin
                    ORDER BY updated_at DESC) AS rn
                FROM(
                    SELECT cin, '' as br_section, CONCAT(street, ', ', postal_code, ' ', city) as address_line, corporate_body_name, updated_at
                    FROM ov.konkurz_restrukturalizacia_actors
                ) tmp1
        ) tmp2
    WHERE cin IS NOT null AND rn=1
    ON CONFLICT (cin) DO NOTHING;
    """

    with connection.cursor() as cursor:
        cursor.execute(insert_query)


class Migration(migrations.Migration):

    dependencies = [
        ("dbs2021", "0002_create_db"),
    ]

    operations = [
        migrations.RunPython(insert_from_or_podanie_issues),
        migrations.RunPython(insert_from_likvidator_issues),
        migrations.RunPython(insert_from_konkurz_vyrovnanie_issues),
        migrations.RunPython(insert_from_znizenie_imania_issues),
        migrations.RunPython(insert_from_konkurz_restrukturalizacia_actors),
    ]
